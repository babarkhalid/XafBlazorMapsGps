@using DevExpress.ExpressApp.Editors;
@using Microsoft.AspNetCore.Components.Web
@using XafBlazorMapsGps.Module.BusinessObjects;
@inject IJSRuntime JSRuntime

<div id="map" class="pb-3"></div>

@code {
    [Parameter]
    public MapModel ComponentModel { get; set; }
    [Parameter]
    public ViewItem CurrentView { get; set; }

    private MapUpdateInvokeHelper locationUpdateInvokeHelper;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        locationUpdateInvokeHelper = new MapUpdateInvokeHelper(SetLocationValues);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        JSRuntime.InvokeVoidAsync("showGeolocation", DotNetObjectReference.Create(locationUpdateInvokeHelper));
    }

    private void SetLocationValues(UpdateItem updateItem)
    {
        var location = CurrentView.CurrentObject as Location;
        location.Latitude = updateItem.Latitude;
        location.Longitude = updateItem.Longitude;
    }

    public static RenderFragment Create(MapModel componentModel, ViewItem viewItem) =>
    @<MapRenderer ComponentModel=@componentModel CurrentView=@viewItem />;
}
